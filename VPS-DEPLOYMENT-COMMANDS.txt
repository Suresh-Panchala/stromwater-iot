# VPS Deployment - Step by Step Commands
# Copy and paste these commands one by one into your VPS SSH session

# ==========================================
# STEP 1: Connect to VPS
# ==========================================
ssh ubuntu@43.205.194.142
# Enter your password when prompted


# ==========================================
# STEP 2: Check if directory exists
# ==========================================
ls -la ~/
# Look for "stromwater-iot" directory


# ==========================================
# STEP 3A: If directory EXISTS - Update code
# ==========================================
cd ~/stromwater-iot
git status
git pull origin main


# ==========================================
# STEP 3B: If directory DOES NOT EXIST - Clone repository
# ==========================================
# First, make sure we're in home directory
cd ~

# Clone the repository
git clone https://github.com/Suresh-Panchala/stromwater-iot.git

# Enter the directory
cd stromwater-iot


# ==========================================
# STEP 3C: If you get "Permission denied" error
# ==========================================
# Option 1: Check who owns the directory
ls -la ~/ | grep stromwater

# Option 2: If owned by root, fix permissions
sudo chown -R ubuntu:ubuntu ~/stromwater-iot

# Option 3: If directory exists but is not a git repo, remove and clone fresh
sudo rm -rf ~/stromwater-iot
git clone https://github.com/Suresh-Panchala/stromwater-iot.git
cd stromwater-iot


# ==========================================
# STEP 4: Update Backend
# ==========================================
cd ~/stromwater-iot/backend

# Check if .env file exists
ls -la .env

# Install dependencies
npm install --production

# Check if PM2 is installed
which pm2

# If PM2 not installed, install it globally
sudo npm install -g pm2

# Restart or start backend
pm2 restart backend || pm2 start src/index.js --name backend

# Save PM2 process list
pm2 save

# View backend logs
pm2 logs backend --lines 20


# ==========================================
# STEP 5: Build Frontend
# ==========================================
cd ~/stromwater-iot/frontend

# Install dependencies
npm install

# Build production bundle
npm run build

# Check if build succeeded
ls -la dist/


# ==========================================
# STEP 6: Configure Nginx (if not already configured)
# ==========================================
# Check if Nginx config exists
sudo ls -la /etc/nginx/sites-available/ | grep stromwater

# If config doesn't exist, create it
sudo nano /etc/nginx/sites-available/stromwater

# Paste this configuration:
# ------------------------------------------
# server {
#     listen 80;
#     server_name 43.205.194.142;
#
#     # Frontend
#     location / {
#         root /home/ubuntu/stromwater-iot/frontend/dist;
#         try_files $uri $uri/ /index.html;
#         add_header Cache-Control "no-cache, must-revalidate";
#     }
#
#     # Backend API
#     location /api/ {
#         proxy_pass http://localhost:5000/api/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }
# ------------------------------------------
# Save and exit: Ctrl+X, then Y, then Enter

# Enable the site (if not already enabled)
sudo ln -s /etc/nginx/sites-available/stromwater /etc/nginx/sites-enabled/

# Test Nginx configuration
sudo nginx -t

# Reload Nginx
sudo systemctl reload nginx


# ==========================================
# STEP 7: Verify All Services
# ==========================================
# Check backend
pm2 status

# Check PostgreSQL
sudo systemctl status postgresql

# Check Mosquitto
sudo systemctl status mosquitto

# Check Nginx
sudo systemctl status nginx

# Check listening ports
sudo netstat -tlnp | grep -E ':(5000|5432|1883|80)'


# ==========================================
# STEP 8: Check Database
# ==========================================
# Check if database has recent data
psql -U postgres -d stromwater_db -c "SELECT device_id, COUNT(*) as records, MAX(timestamp) as latest FROM device_data GROUP BY device_id;"


# ==========================================
# STEP 9: Check MQTT Flow
# ==========================================
# Check if backend is receiving MQTT messages
pm2 logs backend --lines 50 | grep -i mqtt

# Subscribe to MQTT topic to see live data
mosquitto_sub -h localhost -t "devices/#" -u stromwater_mqtt -P "StromWater@MQTT2024"
# Press Ctrl+C to stop


# ==========================================
# STEP 10: Test Web Application
# ==========================================
# Open in your browser:
# http://43.205.194.142/

# Login credentials:
# Username: admin
# Password: admin123


# ==========================================
# TROUBLESHOOTING COMMANDS
# ==========================================

# If backend has errors:
pm2 logs backend --lines 100 | grep -i error

# If frontend doesn't update:
cd ~/stromwater-iot/frontend
rm -rf dist node_modules
npm install
npm run build
sudo systemctl reload nginx

# If database connection fails:
psql -U postgres -d stromwater_db -c "SELECT 1;"

# If MQTT not working:
sudo systemctl restart mosquitto
pm2 restart backend

# View Nginx error logs:
sudo tail -f /var/log/nginx/error.log

# View Nginx access logs:
sudo tail -f /var/log/nginx/access.log


# ==========================================
# USEFUL MONITORING COMMANDS
# ==========================================

# Real-time backend logs
pm2 logs backend

# Real-time Nginx access logs
sudo tail -f /var/log/nginx/access.log

# Check disk space
df -h

# Check memory usage
free -h

# Check CPU usage
top

# List all Node.js processes
ps aux | grep node


# ==========================================
# COMPLETE DEPLOYMENT SUMMARY
# ==========================================
echo "=================================="
echo "Deployment Status Check"
echo "=================================="
echo ""
echo "1. Backend Status:"
pm2 status backend
echo ""
echo "2. Database Records:"
psql -U postgres -d stromwater_db -c "SELECT device_id, COUNT(*) FROM device_data GROUP BY device_id;"
echo ""
echo "3. Recent Backend Logs:"
pm2 logs backend --lines 10 --nostream
echo ""
echo "4. Services Status:"
sudo systemctl is-active postgresql mosquitto nginx
echo ""
echo "Access your app at: http://43.205.194.142/"
echo "Login: admin / admin123"
echo "=================================="
