# StromWater IoT Platform - Production Environment Configuration
# Copy this file to backend/.env on your Ubuntu VPS

# ================================
# SERVER CONFIGURATION
# ================================
NODE_ENV=production
PORT=5000

# ================================
# DATABASE CONFIGURATION
# ================================
DB_HOST=localhost
DB_PORT=5432
DB_NAME=stromwater_db
DB_USER=stromwater_user
DB_PASSWORD=CHANGE_THIS_TO_STRONG_PASSWORD

# ================================
# JWT AUTHENTICATION
# ================================
# IMPORTANT: Generate strong random strings for production!
# Use: openssl rand -base64 32
JWT_SECRET=CHANGE_THIS_TO_RANDOM_STRING_MIN_32_CHARS
JWT_REFRESH_SECRET=CHANGE_THIS_TO_DIFFERENT_RANDOM_STRING_MIN_32_CHARS
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# ================================
# MQTT BROKER CONFIGURATION
# ================================
MQTT_BROKER_URL=mqtt://localhost:1883
MQTT_USERNAME=stromwater
MQTT_PASSWORD=CHANGE_THIS_TO_YOUR_MQTT_PASSWORD

# ================================
# WEBSOCKET CONFIGURATION
# ================================
WS_PORT=5001

# ================================
# EMAIL NOTIFICATIONS (Optional)
# ================================
# Gmail Configuration
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-gmail-app-password
EMAIL_FROM=StromWater IoT <your-email@gmail.com>

# Custom SMTP Configuration
# EMAIL_HOST=smtp.your-domain.com
# EMAIL_PORT=587
# EMAIL_SECURE=false
# EMAIL_USER=alerts@your-domain.com
# EMAIL_PASSWORD=your-smtp-password
# EMAIL_FROM=StromWater Alerts <alerts@your-domain.com>

# ================================
# TELEGRAM NOTIFICATIONS (Optional)
# ================================
# Create bot: Talk to @BotFather on Telegram
# Get chat ID: Send message to your bot, then visit:
# https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here
TELEGRAM_CHAT_ID=your-telegram-chat-id-here

# ================================
# LOGGING
# ================================
LOG_LEVEL=info
# Options: error, warn, info, debug

# ================================
# CORS CONFIGURATION
# ================================
# Add your domain here
CORS_ORIGIN=https://your-domain.com,https://www.your-domain.com
# For development/testing: CORS_ORIGIN=*

# ================================
# RATE LIMITING
# ================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ================================
# SECURITY
# ================================
# Set to true in production
HELMET_ENABLED=true
CSRF_ENABLED=true

# ================================
# NOTES
# ================================
# 1. Never commit this file to Git!
# 2. Keep backups of this file securely
# 3. Change all passwords from defaults
# 4. Use strong random strings for JWT secrets
# 5. Restart backend after changing any values
